
# ================================================
# SELENIUM AUTOMATION FRAMEWORK - CONFIGURACIÓN
# Company QA Team - Application Configuration
# ================================================

# === INFORMACIÓN DE LA APLICACIÓN ===
app:
  name: "Selenium Automation Framework"
  version: "1.0.0"
  description: "Framework de automatización web para testing corporativo"

  # URLs por ambiente
  urls:
    dev: "https://dev-app.company.com"
    test: "https://test-app.company.com"
    staging: "https://staging-app.company.com"
    prod: "https://app.company.com"
    local: "http://localhost:8080"
    default: "https://test-app.company.com"

# === CONFIGURACIÓN DE NAVEGADOR ===
browser:
  default: "chrome"
  headless: false
  maximize: true

  # Opciones para entorno corporativo
  chrome:
    options:
      - "--no-sandbox"
      - "--disable-dev-shm-usage"
      - "--disable-gpu"
      - "--disable-extensions"
      - "--disable-popup-blocking"
      - "--disable-notifications"
      - "--remote-allow-origins=*"
      - "--disable-web-security"
      - "--ignore-certificate-errors"

  firefox:
    preferences:
      "dom.webnotifications.enabled": false
      "media.navigator.permission.disabled": true
      "security.tls.insecure_fallback_hosts": "test-app.company.com,dev-app.company.com"

  edge:
    options:
      - "--no-sandbox"
      - "--disable-dev-shm-usage"
      - "--disable-gpu"
      - "--ignore-certificate-errors"

# === TIMEOUTS (en segundos) ===
timeouts:
  implicit: 10
  explicit: 30
  pageLoad: 60
  script: 30

  # Timeouts específicos para elementos comunes
  dropdown: 15
  modal: 10
  ajax: 20
  fileUpload: 60

# === CONFIGURACIÓN DE TESTING ===
testing:
  environment: "test"

  # Configuración para Drone CI
  ci:
    enabled: true
    buildTimeout: 1800  # 30 minutos
    retryFailedTests: 2
    parallelJobs: 3

  parallel:
    enabled: false
    threadCount: 3
    dataProviderThreadCount: 2

  retry:
    failedTests: 1
    maxAttempts: 3
    retryInterval: 2000  # milliseconds

  # Configuración de ejecución
  execution:
    takeScreenshotOnFailure: true
    takeScreenshotOnSuccess: false
    cleanupAfterSuite: true
    validateEnvironment: true
    maxTestExecutionTime: 300  # seconds per test

# === CONFIGURACIÓN DE REPORTES ===
reports:
  directory: "test-output/reports"
  format: "html"
  includeLogs: true
  includeScreenshots: true

  # ExtentReports configuración
  extent:
    documentTitle: "Automation Test Report"
    reportName: "Test Execution Results"
    theme: "standard"  # standard, dark
    encoding: "utf-8"
    timestampFormat: "MMM dd, yyyy HH:mm:ss"

  # Configuración para Drone
  drone:
    publishReports: true
    reportPath: "test-output/reports/*.html"
    artifactRetention: 30  # días

# === CONFIGURACIÓN DE SCREENSHOTS ===
screenshots:
  directory: "test-output/screenshots"
  format: "png"
  quality: "high"
  onFailure: true
  onSuccess: false
  fullPage: false

  # Configuración de limpieza
  cleanup:
    enabled: true
    daysToKeep: 7
    maxSizeMB: 100

# === CONFIGURACIÓN DE LOGS ===
logging:
  directory: "test-output/logs"
  level: "INFO"
  pattern: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n"

  file:
    name: "automation.log"
    maxSize: "10MB"
    maxFiles: 5

  console:
    enabled: true
    colorize: true
    level: "INFO"

# === DATOS DE USUARIOS DE TEST ===
# NOTA: En producción deberían estar en vault seguro
users:
  admin:
    username: "admin_user"
    password: "Admin@123"
    role: "administrator"
    email: "admin@company.com"

  manager:
    username: "manager_user"
    password: "Manager@123"
    role: "manager"
    email: "manager@company.com"

  employee:
    username: "employee_user"
    password: "Employee@123"
    role: "employee"
    email: "employee@company.com"

  test:
    username: "test_user"
    password: "Test@123"
    role: "tester"
    email: "test@company.com"

# === CONFIGURACIÓN DE SEGURIDAD ===
security:
  ssl:
    verification: false  # Para entornos de desarrollo
    trustAllCertificates: true
    ignoreCertificateErrors: true

  certificates:
    path: "src/test/resources/certificates/"
    corporateCert: "company-cert.pem"

  # Configuración de proxy corporativo
  proxy:
    enabled: false
    host: "proxy.company.com"
    port: 8080
    username: ""
    password: ""
    nonProxyHosts: "localhost|127.0.0.1|*.company.com"

# === CONFIGURACIÓN PARA CONTENEDORES ===
container:
  # Configuración específica para ejecución en Docker/Drone
  selenium:
    hubUrl: "http://selenium-hub:4444/wd/hub"
    gridEnabled: false

  # Configuración de red para contenedores
  network:
    driverHost: "localhost"
    appHost: "app"  # nombre del servicio en docker-compose

  # Recursos para contenedores
  resources:
    memory: "2Gi"
    cpu: "1000m"

# === CONFIGURACIÓN DE DRONE CI ===
drone:
  # Variables específicas para pipeline
  pipeline:
    name: "selenium-tests"
    trigger: "push"

  # Configuración de servicios
  services:
    selenium:
      image: "selenium/standalone-chrome:latest"
      environment:
        - "HUB_HOST=selenium-hub"

  # Notificaciones
  notifications:
    slack:
      enabled: false
      webhook: ""
      channel: "#qa-automation"

    email:
      enabled: false
      recipients:
        - "qa-team@company.com"

# === CONFIGURACIÓN DE BASE DE DATOS (si aplica) ===
database:
  test:
    url: "jdbc:mysql://db-test:3306/testdb"
    username: "testuser"
    password: "testpass"
    driver: "com.mysql.cj.jdbc.Driver"

  # Pool de conexiones
  hikari:
    maximumPoolSize: 5
    connectionTimeout: 20000
    idleTimeout: 300000

# === CONFIGURACIÓN DE API ===
api:
  baseUrl: "https://api-test.company.com"
  version: "v1"
  timeout: 30

  # Headers por defecto
  headers:
    "Content-Type": "application/json"
    "Accept": "application/json"
    "User-Agent": "Automation-Framework/1.0"

  # Autenticación
  auth:
    type: "bearer"  # bearer, basic, apikey
    token: ""

  # Rate limiting
  rateLimit:
    requestsPerSecond: 10
    burstSize: 20

# === CONFIGURACIÓN AVANZADA ===
advanced:
  # Reintentos para elementos
  element:
    retry:
      count: 3
      delay: 1000  # milliseconds
      exponentialBackoff: true

  # Configuración de waits
  waits:
    pollingInterval: 500
    fluentWaitTimeout: 30
    customTimeouts:
      dropdown: 15
      modal: 10
      ajax: 20
      fileUpload: 60

  # Configuración de JavaScript
  javascript:
    enabled: true
    timeout: 10
    asyncTimeout: 30

# === FEATURE FLAGS ===
features:
  screenshots: true
  videoRecording: false
  performanceMetrics: false
  accessibilityTesting: false
  visualRegression: false
  apiTesting: true
  crossBrowserTesting: true
  parallelExecution: false
  headlessTesting: true
  mobileTesting: false

# === CONFIGURACIÓN DE LÍMITES ===
limits:
  maxTestExecutionTime: 1800  # seconds
  maxPageLoadTime: 120
  maxElementWaitTime: 60
  maxScreenshotSize: "5MB"
  maxLogFileSize: "50MB"
  maxReportSize: "20MB"

# === CONFIGURACIÓN DE CLEANUP ===
cleanup:
  afterSuite: true
  afterClass: false

  directories:
    - "temp/"
    - "cache/"
    - "downloads/"

  files:
    olderThanDays: 7
    extensions:
      - ".tmp"
      - ".cache"
      - ".download"

# === CONFIGURACIÓN DE MONITOREO ===
monitoring:
  enabled: false

  metrics:
    testDuration: true
    pageLoadTimes: true
    elementResponseTimes: true

  alerts:
    slowTests: 300  # seconds
    highFailureRate: 20  # percentage

  export:
    format: "json"
    endpoint: "http://monitoring:9090/metrics"

# === CONFIGURACIÓN DE DATOS DE TEST ===
testData:
  source: "yaml"  # yaml, properties, excel, json, database

  files:
    userCredentials: "testdata/users.xlsx"
    testScenarios: "testdata/test-scenarios.json"
    formData: "testdata/form-data.yml"

  # Cache de datos
  cache:
    enabled: true
    ttl: 3600  # seconds

  # Generación de datos únicos
  generation:
    timestampSuffix: true
    prefix: "auto_"
    faker:
      locale: "es_MX"